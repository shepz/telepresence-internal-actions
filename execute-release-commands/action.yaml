name: execute-release-commands
description: "Execute commands for Telepresence releases"
inputs:
  gh_auto_release_token:
    description: "The token to use to authenticate with GitHub"
    required: true
  gh_auto_release_email:
    description: "The email to use to authenticate with GitHub"
    required: true
  gh_auto_release_user:
    description: "The user to use to authenticate with GitHub"
    required: true
  telepresence_version:
    description: "The current release of Telepresence in the form of vX.Y.Z[-rc.N]"
    required: true
  repository:
    description: "The repository to upgrade"
    required: true
  commands:
    description: "The commands to run"
    required: true
  post_commands:
    description: "The post commands to run"
    required: false
runs:
  using: composite
  steps:
    - name: Set environment variables
      shell: bash
      run: |
        echo "RELEASE_BRANCH_NAME=release/$(echo ${{ inputs.telepresence_version }} | sed 's/^v//;s/-rc\.[0-9]*$//')" >> $GITHUB_ENV

    - name: Checkout other repo
      uses: actions/checkout@v3
      with:
        path: remote_repo
        repository: ${{ inputs.repository }}
        token: ${{ inputs.GH_AUTO_RELEASE_TOKEN }}
        persist-credentials: false
        ref: ${{ env.RELEASE_BRANCH_NAME }}

    - name: Setup Git Config
      shell: bash
      run: |
        set -x

        git config --global user.email '${{ inputs.GH_AUTO_RELEASE_EMAIL }}'
        git config --global user.name '${{ inputs.GH_AUTO_RELEASE_USER }}'
        git config --global credential.helper 'store --file=/tmp/git-credentials'
        echo "https://x-access-token:${{ inputs.GH_AUTO_RELEASE_TOKEN }}@github.com" > /tmp/git-credentials

    - uses: actions/setup-go@v3
      with:
        go-version: '~1.21.0'

    - name: Install GoMock
      shell: bash
      run: go install github.com/golang/mock/mockgen@v1.6.0

    - name: Check if branch exists
      shell: bash
      working-directory: ./remote_repo
      id: checkbranch
      run: |
        if git show-ref --verify --quiet refs/remotes/origin/${{ env.RELEASE_BRANCH_NAME }}; then
          echo "BRANCH_EXISTS=true" >> $GITHUB_ENV
        else
          echo "BRANCH_EXISTS=false" >> $GITHUB_ENV
        fi

    - name: Switch to the branch if it exists
      shell: bash
      working-directory: ./remote_repo
      if: env.BRANCH_EXISTS == 'true'
      run: |
        git checkout ${{ env.RELEASE_BRANCH_NAME }}

    - name: Create and switch to branch if not exists
      shell: bash
      working-directory: ./remote_repo
      if: env.BRANCH_EXISTS == 'false'
      run: |
        git checkout -b ${{ env.RELEASE_BRANCH_NAME }}
        git push origin ${{ env.RELEASE_BRANCH_NAME }}

    - name: Execute commands
      shell: bash
      working-directory: ./remote_repo
      env:
        TELEPRESENCE_VERSION: ${{ inputs.telepresence_version }}
      run: |
        ${{ inputs.commands }}
        git push origin HEAD:${{ env.RELEASE_BRANCH_NAME }}

    - name: Execute post commands
      if: ${{ inputs.post_commands }}
      shell: bash
      working-directory: ./remote_repo
      env:
        TELEPRESENCE_VERSION: ${{ inputs.telepresence_version }}
      run: |
        ${{ inputs.post_commands }} 

#    - name: Create pull request
#      uses: peter-evans/create-pull-request@v5.0.1
#      with:
#        path: ./remote_repo
#        title: "Telepresence ${{ env.RELEASE_BRANCH_NAME }}"
#        base: main
#        branch: ${{ env.RELEASE_BRANCH_NAME }}
#        token: ${{ inputs.GH_AUTO_RELEASE_TOKEN }}
#        body: "New telepresence release"
